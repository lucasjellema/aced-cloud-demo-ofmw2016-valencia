#%RAML 0.8
title: Artist API
version: 1.0
baseUri: /mobile/custom/artistapi
protocols: [HTTPS]
mediaType: "application/json"
/acts:
  displayName: Acts
  description: |
    List of all candidate acts (with per act the name, number of votes, date added)
    
  get:
    protocols: [HTTPS]
    queryParameters:
      minimumVotes:
        displayName: minimum number of votes
        description: |
          minimum number of votes that an act has to have received to appear in the list
          
        type: string
      addedSince:
        displayName: Added since
        description: |
          acts that have been added since this date
          
        type: date
      max:
        displayName: Maximum number of proposals
        description: |
          maximum number of acts that is returned
          
        type: integer
    responses:
      200:
        body:
          application/json:
            example: |
              [{
                "id":"1",
                "name":"David Bowie",
                "numberOfVotes":"1000000",
                "registrationDate":"2016-02-01"
              },
               {
                 "id":"2",
                 "name":"Hardwell",
                 "numberOfVotes":"2000000",
                 "registrationDate":"2016-02-23"
               },
               { "id":"3",
                 "name":"Tailor Swift",
                "numberOfVotes":"1500000",
                "registrationDate":"2016-01-10"
               }
              ]
              
  /{id}:
    displayName: GetDetails
    description: |
      Details of the act
      
    uriParameters:
      id:
        displayName: id
        description: |
          the id of the act
          
        type: string
        required: true
    get:
      responses:
        200:
          body:
            application/json:
              example: |
                { "id":"1",
                 "name"""David Bowie",
                 "numberOfVotes":"1000000",
                  "registrationDate":"2016-02-01",
                  "description":"a tribute to David Bowie",
                 "genres":"pop",
                 "biography":"Driven by an entirely deeper dynamic than most pop artists, David Bowie inhabits a very special world of extraordinary sounds and endless vision. Unwilling to stay on the treadmill of rock legend and avoiding the descent into ever demeaning and decreasing circles of cliché, Bowie writes and performs what he wants, when he wants. His absence from the endless list of “important events” has just fuelled interest. Constant speculation about what the guy was up to has even led some to wonder if this is his greatest reinvention ever. David Robert Jones was born in Brixton on January 8, 1947. At age thirteen, inspired by the jazz of the London West End, he picked up the saxophone and called up Ronnie Ross for lessons. Early bands he played with – The Kon-Rads, The King Bees, the Mannish Boys and the Lower Third –provided him with an introduction into the showy world of pop and mod, and by 1966 he was David Bowie, with long hair and aspirations of stardom rustling about his head. Kenneth Pitt signed on as his manager, and his career began with a handful of mostly forgotten singles but a head full of ideas. It was not until 1969 that the splash onto the charts would begin, with the legendary Space Oddity (which peaked at No. 5 in the UK). Amidst his musical wanderings in the late 60s, he experimented with mixed media, cinema, mime, Tibetan Buddhism, acting and love. The album, originally titled David Bowie then subsequently Man of Words, Man of Music, pays homage to all the influences of the London artistic scene. It shows the early song-writing talent that was yet to yield some of rock-n-roll’s finest work, even if it would take the rest of the world a few years to catch up with him.",
                 "imageURL":"http://www.davidbowie.com/photo/1972-usa-ziggy-curtains-51176"
                 "image":"",
                 "discography":[
                 {"year":"1967",
                 "title":"David Bowie",
                 "coverImageURL":"http://www.davidbowie.com/album/david-bowie"},
                {"year":"1969",
                  "title":"Space oddity",
                 "coverImageURL":"http://www.davidbowie.com/album/david-bowie-0"}
                  ]
                }
                
    /{imageID}:
      displayName: getImage
      description: |
        the image of the act
        
      uriParameters:
        imageID:
          displayName: imageID
          description: |
            the image of the act
            
          type: string
          required: true
      get:
        responses:
          200:
            body:
              image/png: