package nl.amis.world.model;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 24 22:05:11 CET 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CountryImpl extends EntityImpl {
    
    private static ADFLogger _logger = ADFLogger.createADFLogger(CountryImpl.class);
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RichValue,
        Name,
        Code,
        Continent,
        Population,
        Area,
        Coastline,
        GovernmentForm,
        CurrencyName,
        CurrencyUnit,
        Birthrate,
        Deathrate,
        LifeExpectancy,
        Url;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int RICHVALUE = AttributesEnum.RichValue.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int CONTINENT = AttributesEnum.Continent.index();
    public static final int POPULATION = AttributesEnum.Population.index();
    public static final int AREA = AttributesEnum.Area.index();
    public static final int COASTLINE = AttributesEnum.Coastline.index();
    public static final int GOVERNMENTFORM = AttributesEnum.GovernmentForm.index();
    public static final int CURRENCYNAME = AttributesEnum.CurrencyName.index();
    public static final int CURRENCYUNIT = AttributesEnum.CurrencyUnit.index();
    public static final int BIRTHRATE = AttributesEnum.Birthrate.index();
    public static final int DEATHRATE = AttributesEnum.Deathrate.index();
    public static final int LIFEEXPECTANCY = AttributesEnum.LifeExpectancy.index();
    public static final int URL = AttributesEnum.Url.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CountryImpl() {
    }

    /**
     * @param richValue key constituent
     * @param name key constituent
     * @param code key constituent
     * @param continent key constituent
     * @param population key constituent
     * @param area key constituent
     * @param coastline key constituent
     * @param governmentForm key constituent
     * @param currencyName key constituent
     * @param currencyUnit key constituent
     * @param birthrate key constituent
     * @param deathrate key constituent
     * @param lifeExpectancy key constituent
     * @param url key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String richValue, String name, String code, String continent, Long population,
                                       Long area, Long coastline, String governmentForm, String currencyName,
                                       String currencyUnit, BigDecimal birthrate, BigDecimal deathrate,
                                       BigDecimal lifeExpectancy, String url) {
        return new Key(new Object[] {
                       richValue, name, code, continent, population, area, coastline, governmentForm, currencyName,
                       currencyUnit, birthrate, deathrate, lifeExpectancy, url
        });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("nl.amis.world.model.Country");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    String s=null;    
    /**
        * Custom DML update/insert/delete logic here.
        * @param operation the operation type
        * @param e the transaction event
        */
       protected void doDML(int operation, TransactionEvent e) {
           super.doDML(operation, e);
           
           // *** Simulating NullPointerException ***
           _logger.info("UPDATING COUNTRY...");
           String x = s.substring(9);
       }
}

