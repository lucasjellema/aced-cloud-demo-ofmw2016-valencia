<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns0="ArtistAPI2"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="aced.cloud.demo"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:ns1="http://xmlns.oracle.com/ProposedActsService/NewActProposalsServices/ArtistAPICallout"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/ArtistAPICallout.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Artist" namespace="ArtistAPI2"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/ArtistsService.wsdl"/>
        <oracle-xsl-mapper:rootElement name="findArtistResponseMessage" namespace="aced.cloud.demo"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [THU SEP 07 12:47:51 CEST 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:findArtistResponseMessage>
      <tns:spotifyId>
        <xsl:value-of select="/ns0:Artist/ns0:spotifyId"/>
      </tns:spotifyId>
      <tns:biography>Not yet available</tns:biography>
      <tns:name>
        <xsl:value-of select="/ns0:Artist/ns0:name"/>
      </tns:name>
      <tns:artistType>
        <xsl:value-of select="/ns0:Artist/ns0:artistType"/>
      </tns:artistType>
      <tns:legalName>
        <xsl:value-of select="/ns0:Artist/ns0:legalName"/>
      </tns:legalName>
      <tns:primaryGenre>
        <xsl:value-of select="/ns0:Artist/ns0:primaryGenreName"/>
      </tns:primaryGenre>
      <tns:genres>
        <xsl:value-of select="/ns0:Artist/ns0:genres"/>
      </tns:genres>
      <tns:imageURL>
        <xsl:value-of select="/ns0:Artist/ns0:imageURL"/>
      </tns:imageURL>
      <tns:birthdate>
        <xsl:value-of select="/ns0:Artist/ns0:birthDate"/>
      </tns:birthdate>
      <tns:enddate>
        <xsl:value-of select="/ns0:Artist/ns0:endDate"/>
      </tns:enddate>
      <tns:country>
        <xsl:value-of select="/ns0:Artist/ns0:country_of_origin"/>
      </tns:country>
      <tns:era>
        <xsl:value-of select="/ns0:Artist/ns0:decade"/>
      </tns:era>
      <tns:poularity>
        <xsl:value-of select="/ns0:Artist/ns0:popularity"/>
      </tns:poularity>
      <tns:albums>
        <xsl:for-each select="/ns0:Artist/ns0:albums">
          <tns:album>
            <tns:title>
              <xsl:value-of select="ns0:name"/>
            </tns:title>
            <tns:genre>
              <xsl:value-of select="ns0:genre"/>
            </tns:genre>
            <tns:trackCount>
              <xsl:value-of select="ns0:trackCount"/>
            </tns:trackCount>
            <tns:imageURL>
              <xsl:value-of select="ns0:imageURL"/>
            </tns:imageURL>
            <tns:releaseDate>
              <xsl:value-of select="ns0:releaseDate"/>
            </tns:releaseDate>
          </tns:album>
        </xsl:for-each>
      </tns:albums>
    </tns:findArtistResponseMessage>
  </xsl:template>
</xsl:stylesheet>
